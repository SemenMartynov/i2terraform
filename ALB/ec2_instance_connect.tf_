# ------------------------------------------------------------------------------
# privileges for the instance we are standing up
# ------------------------------------------------------------------------------
resource "aws_iam_role" "instance_connect" {
  name_prefix = "instance_connect_role"
  path        = "/ec2ic/"
  description = "Privileges for the EC2 instance-connect"

  assume_role_policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Effect" : "Allow",
        "Principal" : {
          "Service" : ["ec2.amazonaws.com", "ssm.amazonaws.com"]
        },
        "Action" : "sts:AssumeRole"
      }
    ]
  })

  tags = merge(var.common_tags, {
    Name = "Instance Connect Role"
  })
}

resource "aws_iam_role_policy_attachment" "instance_connect" {
  role       = aws_iam_role.instance_connect.id
  policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
}

resource "aws_iam_instance_profile" "instance_connect" {
  name = "instance-connect"
  role = aws_iam_role.instance_connect.id
}

# ------------------------------------------------------------------------------
# policy for users allowing connection
# ------------------------------------------------------------------------------
resource "aws_iam_policy" "instance_connect" {
  name_prefix = "instance_connect_policy"
  path        = "/ec2ic/"
  description = "Allows use of EC2 instance connect"

  policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Effect" : "Allow",
        "Action" : "ec2-instance-connect:SendSSHPublicKey",
        "Resource" : "${aws_instance.webserver.arn}",
        "Condition" : {
          "StringEquals" : { "ec2:osuser" : "ec2-user" }
        }
        }, {
        "Effect" : "Allow",
        "Action" : "ec2:DescribeInstances",
        "Resource" : "*"
      }
    ]
  })

  tags = merge(var.common_tags, {
    Name = "Instance Connect Policy"
  })
}

resource "aws_iam_user_policy_attachment" "instance_connect" {
  user      = "terraform"
  policy_arn = aws_iam_policy.instance_connect.arn
}
