server {
    listen       80;
    server_name  _;

    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /admin {
        auth_basic "Restricted";
        auth_basic_user_file  /etc/nginx/nginx.htpasswd;

        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /health-check {
        access_log off;
        return 200 'OK';
        # because default content-type is application/octet-stream,
        # browser will offer to "save the file"...
        # the next line allows you to see it in the browser so you can test 
        add_header Content-Type text/plain;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {
        root /var/www/html;

        fastcgi_pass   php:9000;
        fastcgi_index  index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $document_root;

        include        fastcgi_params;

        fastcgi_param HTTPS $fastcgi_https;
        fastcgi_param SERVER_PORT $http_x_forwarded_port;
        fastcgi_param REMOTE_ADDR $http_x_forwarded_for;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

map $http_x_forwarded_proto $fastcgi_https {
  default $https;
  https   'on';
}
